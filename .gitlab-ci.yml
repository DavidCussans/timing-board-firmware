stages:
  - quick_checks
  - builds
  - publish

variables:
  IPBB_DOKER_REGISTRY: gitlab-registry.cern.ch/thea/ecto-fw-docker
  OUTPUT_ROOT_DIR: "/eos/user/p/pdtsbot/firmware"

.job_template: &template_job_base
  image: ${IPBB_DOKER_REGISTRY}:2018-09-05__ipbb_v0.3.4
  tags:
    - docker
    - xilinx-tools
  before_script:
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    # - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    # ##
    # - mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo "StrictHostKeyChecking no" >> ~/.ssh/config

    - pwd
    - source /software/Xilinx/Vivado/2016.4/settings64.sh
    - export MODELSIM_ROOT="/software/mentor/modelsim_10.5/modeltech/"
    - export PATH="${MODELSIM_ROOT}/bin/:${PATH}"
    - export IPBB_SIMLIB_BASE=/scratch/xilinx-simlibs/modelsim_10.5

    - cd /tmp
    - ipbb init buildArea
    - cd buildArea
    - ipbb add git https://github.com/ipbus/ipbus-firmware -b v1.2
    - ln -s ${CI_PROJECT_DIR} src/timing-board-firmware
    - env
    - export -p


.job_template: &template_job_vivado_quick_check
  <<: *template_job_base
  stage: quick_checks
  script:
    - ipbb toolbox check-dep -t vivado timing-board-firmware:${PROJECT_DIR_PATH} ${PROJECT_TOP_DEP}
    - ipbb proj create vivado ${CI_JOB_NAME#quick_check:} timing-board-firmware:${PROJECT_DIR_PATH} -t ${PROJECT_TOP_DEP}
    - cd proj/${CI_JOB_NAME#quick_check:}
    - ipbb vivado make-project
    - ipbb vivado check-syntax

.job_template: &template_job_vivado_build
  <<: *template_job_base
  stage: builds
  only:
    - web
    - tags
  script:
    - mkdir -p ${HOME}/.Xilinx/Vivado
    - echo 'puts {Setting maximum number of threads to 2}' >> ${HOME}/.Xilinx/Vivado/Vivado_init.tcl
    - echo 'set_param general.maxThreads 2' >> ${HOME}/.Xilinx/Vivado/Vivado_init.tcl
    - ipbb proj create vivado ${CI_JOB_NAME#build:} timing-board-firmware:${PROJECT_DIR_PATH} -t ${PROJECT_TOP_DEP}
    - cd proj/${CI_JOB_NAME#build:}
    - ipbb vivado make-project
    - ipbb vivado -q synth -j3 
    - ipbb vivado -q impl 
    - ipbb vivado bitfile package
    - mkdir ${CI_PROJECT_DIR}/package
    - cp package/*.tgz ${CI_PROJECT_DIR}/package
  artifacts:
    when: on_success
    name: "${CI_JOB_NAME#build:}-on-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA:0:8}"
    paths:
      - package/*.tgz


publish_build_job:
  stage: publish
  only:
    - web
    - tags
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  variables:
    CI_OUTPUT_DIR: "package/"
  before_script:
    - yum -y install openssh-clients
    - export EOS_PATH=${OUTPUT_ROOT_DIR}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export EOS_PATH=${EOS_PATH/commits/tags} ; fi
  script:
    - env | grep -v PASSWORD | grep -v TOKEN | sort
    - echo "${EOS_ACCOUNT_PASSWORD}" | kinit ${EOS_ACCOUNT_USERNAME}@CERN.CH
    - klist
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "rm -rf ${EOS_PATH} && mkdir -p ${EOS_PATH}"
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "ln -sfnv ${EOS_PATH} `dirname ${EOS_PATH}`/latest"
    - kdestroy
    - ls -lt ${CI_OUTPUT_DIR}
    - deploy-eos


# quick_check:dummy:
#   stage: quick_checks
#   script:
#     - echo "Hello World"

build:dummy:
  stage: builds
  script:
    - mkdir package
    - echo "Hello World" > package/hello_world.txt
  artifacts:
    when: on_success
    name: "${CI_JOB_NAME#build:}-on-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA:0:8}"
    paths:
      - package/

# #--- Quick checks ---
# quick_check:ouroboros_sim: 
#   <<: *template_job_base
#   stage: quick_checks
#   script:
#     - ipbb toolbox check-dep -t sim timing-board-firmware:projects/ouroboros top_sim.dep
#     - ipbb proj create sim ouroboros_sim timing-board-firmware:projects/ouroboros -t top_sim.dep
#     - cd proj/ouroboros_sim
#     - ipbb sim setup-simlib ipcores fli make-project


# #--- Ouroboros ---------------------
# # Dep and syntax check
# quick_check:ouroboros_fmc:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35.dep"

# # Build
# build:ouroboros_fmc:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35.dep"


# #--- Ouroloop FMC ------------------
# # Dep and syntax check
# quick_check:ouroloop_fmc:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35_loopback.dep"

# # Build
# build:ouroloop_fmc:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35_loopback.dep"


# #--- Ouroboros PC059 -----------------
# # Dep and syntax check
# quick_check:ouroboros_pc059:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35_pc059.dep"

# # Build
# build:ouroboros_pc059:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/ouroboros"
#     PROJECT_TOP_DEP: "top_a35_pc059.dep"


# #--- TLU Overlord -------------------------
# # Dep and syntax check
# quick_check:overlord_tlu:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/overlord"
#     PROJECT_TOP_DEP: "top_tlu.dep"

# # Build 
# build:overlord_tlu:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/overlord"
#     PROJECT_TOP_DEP: "top_tlu.dep"


# #--- Fanout -------------------------
# # Dep and syntax check
# quick_check:fanout_0_pc059:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/fanout"
#     PROJECT_TOP_DEP: "top_ip65.dep"

# # Build 
# build:fanout_0_pc059:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/fanout"
#     PROJECT_TOP_DEP: "top_ip65.dep"

# # Build 
# build:fanout_1_pc059:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/fanout"
#     PROJECT_TOP_DEP: "top_ip66.dep"

# # Build 
# build:fanout_2_pc059:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/fanout"
#     PROJECT_TOP_DEP: "top_ip67.dep"

#--- CRT endpoint -------------------------
# Dep and syntax check
# quick_check:crt_fmc:
#   <<: *template_job_vivado_quick_check
#   variables:
#     PROJECT_DIR_PATH: "projects/crt"
#     PROJECT_TOP_DEP: "top.dep"

# # Build 
# build:crt_fmc:
#   <<: *template_job_vivado_build
#   variables:
#     PROJECT_DIR_PATH: "projects/crt"
#     PROJECT_TOP_DEP: "top.dep"
